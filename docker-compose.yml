services:
  clickhouse:
    image: clickhouse/clickhouse-server:23.8
    container_name: marketing-clickhouse
    environment:
      CLICKHOUSE_DB: marketing
      CLICKHOUSE_USER: default
      CLICKHOUSE_PASSWORD: ""
      CLICKHOUSE_DEFAULT_ACCESS_MANAGEMENT: 1
    volumes:
      - clickhouse-data:/var/lib/clickhouse
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "9000:9000"
      - "8123:8123"
    healthcheck:
      test: ["CMD", "clickhouse-client", "--query", "SELECT 1"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: marketing-redis
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: .
      dockerfile: backend/Dockerfile
    container_name: marketing-backend
    depends_on:
      clickhouse:
        condition: service_healthy
      redis:
        condition: service_healthy
    env_file:
      - .env
    environment:
      CLICKHOUSE_URL: ${CLICKHOUSE_URL:-clickhouse://clickhouse:9000/marketing}
      CLICKHOUSE_USER: ${CLICKHOUSE_USER:-default}
      CLICKHOUSE_PASSWORD: ${CLICKHOUSE_PASSWORD:-}
      REDIS_URL: ${REDIS_URL:-redis://redis:6379/0}
      CORS_ALLOWED_ORIGIN: ${CORS_ALLOWED_ORIGIN:-http://localhost:3000}
    volumes:
      - ./backend/app:/app/app
      - ./backend/llm_orchestrator.py:/app/llm_orchestrator.py
    ports:
      - "8000:8000"
    command: ["uvicorn", "app.main:app", "--host", "0.0.0.0", "--port", "8000", "--reload"]

volumes:
  clickhouse-data:
